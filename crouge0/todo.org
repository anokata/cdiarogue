* minimum playable. after all - read and rewrite todo tz.
** 1.+walking @
** 2.+debug and msg
** 3.+simple location
** 4.+walking @ loc stop walls
 4.1 stop at map ends/ now just for 0 left top
 4.2 map objects properties
     load map with kv params format

** 5.+add monstr, simple ai, stay, rand. time steps
   5.1+list of actors, draw 
   5.2+moving other by steps, rand, direct to near rand point, wall block 
   5.3+actors attributes, color, attack, behavior
** 6.+interacting, simple combat
   6.0+player must be actor
   6.1+actor-player collide detect, from player and from actors, 
   6.2+events map, collide events by types
   6.3+health, wounds, minimum needed stats and mechanic
      show msg who atk, with how attk, with amount of hp, show player hp, die
      end game, mon attaking
   6.4+direct to player

** 7.+items
- +items on map
- +item list, test items in map, colors, draw items
- +interaction - find item on point
- +mini inventory
*** inventory, view, take, drop
      - +inventory module
      - +inventory state
      - +item types and description about item by type
      - +inventory list draw
      - +action on item walk - msg - see $item
      - +take item
      - +drop item
      - +quaff 
      - +actor slots
      - +equiping wield and wear
      - +calc phy defend - ph. def, atk - weapon, damage - atk&def
      - +weapon and armor effect on combat
      - +stats str, dex, endurance, !wisdome and it's effect on actions and other

** 8. +gp for minimum completed *DasHReaLM*
      [must be easy]
      - +char info mode, weared, stats 
      - +item take off
      - +player self healing by time - regen event
            - +global events: event fun and probability ?bug
            - +probability dice roll
      [intresting]
      - +enum to/from strings (macro?)
      - +color to/from strins macros and funcs
      - +exp, lvls, how stats grow - basic:
            - +add exp, exp gain for kill, smth else. add to struct, to save
                    +and load, to view, to format and charview
            - +add level
            - +lvl up for exp 
                  max - 1000 lvl, 100 exp per lvl
                  gain (~10 exp) of equal lvl mob defeating
                  gain (~10 * (mob lvl - your lvl)) if mob lvl more than your
                        else (~10 / (your lvl - mob lvl))
                        10 - mob exp gain by type, miniboss = 10, easy = 1
                  - +calc next exp 
            - +add stat points with lvlup, serialization
            - +show stat points
            - +spend SP on char view by key to base stats up

* +maps
- /mapreplace (actuallize map gen) to make tile map save func
- +mapedit - save with new data
        Reading by relative crash tile loading because there not valid filenames
        In map we have relative path - it's ok
        We have to add to it base path to correct
        First need make use files path relative map dir
      - +make tiles files path relative map dir
      - +make out tiles to tiles file in map save 
            and set tiles file in map file
      - +make recalc new width n height
      - +save to tmp old map, replace new

- +fix viewport moving to end and init at player

** 9. map for some playable  [need some remaking ]
- +map save load - map save load with items, mobs, store player
      Add Tag support to key:value parser - tag separate sections or end one
	Not Tag - Just separate file for each entity in DSV format
      - +parse dsv to strings list
      - +parse line to strings array
      - +parse file to array of parsed lines
      - +test
      - +add to maps key = itemsfile:items_0_0 
	- +use to load tiles
      - +mobs, saving load from file
      - +mobs from map files
      - +move tiles count to tiles file - not needed because not used
	- +saving player
      - +load player
      - +load items saving items
            - +sample items file
            - +items enums
            - +load item
            - +dump item
            - +load items list
            - +save items list
            - +load location items
            - +load player items
            - +save player items
            - +save location items

[ INWORK ]
* 10 min dia like
** dung
      - add objects
            - +add object struct
            - +save object
            - +load object
            - +save objects
            - +load objects
            - +objects of location
            - draw objects
            - acting objects
                  > on portal
      - enter to dung
            - event on collide with portal obj? or > cmd
            - load other map
            - generate dungeon
                  - with mobs
                  - with items
                  - with exit

- cleanup, rem unused, see todo
- detect maps wh from first? or?
- save and exit and exit without save with confirmation
- spawn at enter? in some dungs
- if ?I need same char with different colors on same map 
- save/load player equiped state items (item equiped flag?)


- TECHDEBT :: 
      - Extract viewport module
      - tests and coverage


* improvements features
** combat
      - balance: hp restore down - only in town space
      - ranged damage i.e. 2-5 
      - dodging chance
      - crit hits
      - damage at different parts of body/armor
      - fire, bows
      - skills - weapon health 
      - balance and fun
      - endurance wisdom intelegence dex (4 base stats?)

** mobs
      - mobs minds
      - mobs evoluting. script based(bf like) behavior - see x:y if this = TileRock
        ... move to, attack, take, eat.
      - mobs generic type and inherit
            - mobs/items types and instances?
      - gold drop

** shop
      - shops, buy potions
      - npc, dialogs
      - loot, paws, wool, skin, bone, meet, jelly
** items
      - read scrolls, books to effect on stats, skills, spells
      - item eat, activate, use
      - zap wands
      - items grade, power ups
      - pick up from direction, view menu list items
      - same items to stack with number
      - better inventory by category
      - item effects: effect X itemType X action
      - item actions - pass func
      - teleport scroll with P
** map
      - more map tiles types, plants, rocks, sand
      - made world map
      - pack map files to zip/tarbz, unpack in mem (in ram space run or tmp)
      - lighting
      - map edit mode, add items, mobs, tiles
      - other tiles types with props such water, plants?
      - more objects: doors, open, close, kick - commands, to direction mode
            - stashs bushs barrels stones garbage
      - heal point


- ! parse header and store columns indexes and get columns index and make struct
- debug commands for mobs spawn, items, heal

- +wait and rest 
- +viewport at load not moving to @ center
- +make tiles color from str
- + \escape!
- +fix items drop - not free item, just move from player list to map list
* big theme
- step speed action model, a little real time
- map gen 
- magic, spells, mana

* monsters data files, spawns
 other stats, and fun and story
 map, town, locations
 ...

** main target quest
** menu, start.

* future features
menu (not up down - use vi like.)
Idea and world First! get old records and generate mechanic
First - fun therefore slash like dia, but not clone dia.
 choise color of your avatar
 Color Elements! sword of red, blue poring, dark green - acid, light green - life
 Collect souls(of colors, grades) to equip, grade up it to cristalize?
 ! TODO Remember ff7-9 dia cata elona poke tohou... etc what elements i like - write down, and which can implemnt
 - materia in equip gain exp and abilitis
 - critical hist rate and grow near zero hp
 - random encounters, abc time combats
 - capture mobs for link to equip/slots for stats and buffs, resists
 - night mode, time dependent effects
 - bad statuses, blind, confuse, poisoned, sleep, debufs
 - unlimited levels, K M G .. grades of stats, exp, money, souls  or reform
 - mood
 - craft
 - map gen - rooms without coridors hallways - just rooms connected with doors
      make random H or V split space until all rooms squares become less X.  make it walls
      drop Y% rooms
      drop all unaccessible - not has common side
      make doors in common sides (all or % then drop unaccessible)
      - add special zones
 - map gen - rooms grow from one rect on random side other random rect

2. Magic and skill grows like morow
3. World height? it difficult for first try, lets it be simple dung with wild
4. Draw static map, weather zones, caves. Circle
5. fun events, fast grow, new challanges, FF, skills/items (keys, levitate, lava, swim) for access areas, bosses
6. end goal, meaning of all of this - survive and escape from planet. from black entitys.
day part status - sun/moon weather.
anim trees ...
* 1. World map, how store, view it with self position. map blocks. view frame.
1.1 Struct for wmap
1.2 Load wmap.
1.3 View wmap. (color regions) 
1.3.1 wmap mode.
1.4 show map region description.
1.5 gettext _
* 2.  local map, coords to wmap, load regions, moving, store, load
2.1 cursor move mode
2.2 how store/load local map? and view in edges. Viewport map. Load from pieces to global map array.
... local map files naming
2.3 load to global map
2.3.1 gmap mode
2.3.2 colors (without attributes)
2.4 global to viewport at point
2.5 moving and view map


* What I LEARNED
   Remember fixing mem errors, use valgrind
   make simple structures and basic methods in module
   then other module for more complex, linked to other modules functionality
   then most complex few modules than used by main module?

How make without allocating?

* log [ ] make wmap from locals
WRite and draw GP Mechanic, view, make questions and decisions, KNOW WHAT TO DO
 fun
 levels dungs town
 drop from actors
 wild simulations, population, born, old, learn, work, eat, sleep
	Display turns.
 unicode ncursesw
 save load, data files for actors, items
 magic, skills, exp
http://www.roguebasin.com/index.php?title=Ncursesw
 TODO Check map folder exist
 beep sounds
 ATTENTION: Naming convention for func = <modulename>_<obj>_<action>_<opt>
 must be single point of truth SPOT - one description of struct, types, that handle it serialization
* Utils: map editor pipe, fix global map loading
 1. separate map loader using tile_map
 1.1+print loaded to stdout
 1.2 +input map path-name to view
 2. +make map converter from viewable format to string like in data
 2.1 +load by lines from file and out to one line - script : tr -d \n 
 2.2 save converted to map file

* quests types
- reach location
- find(catch) N objects and bring it to npc/location
- escape from
- clear location from x
get quest from random encounter

- traps, and traps with reward

* plot
have a general goal, many rewards and many pitfalls.
Goal: find artifact. what? why? Ring of wisdome. World had stupid. You need cure it.
You hear that artifact deep in cave near forest. You go there and get lost.
... you find artifact and it traped in crystal, you need find magic wand of
freedome, lying in island in see over a desert.

* things to do may separate
- genetic evolve 
- sound
- map gen
- ascii art pic editor mode, terminal again vi keys... + animation.
- UI progress bar with value
- console animation, fake loading with fake hdd sound

Paw of day darkness

* backlog
make dir for src
separate src .c for dirs/modules
fill gcov
m4 proc
calc width or height
