* minimum playable
** 1.+walking @
** 2.+debug and msg
** 3.+simple location
** 4.+walking @ loc stop walls
 4.1 stop at map ends/ now just for 0 left top
 4.2 map objects properties
     load map with kv params format

** 5. add monstr, simple ai, stay, rand. time steps
   5.1+list of actors, draw 
   5.2+moving other by steps, rand, direct to near rand point, wall block 
   5.3+actors attributes, color, attack, behavior
** 6. interacting, simple combat
   6.0+player must be actor
   6.1+actor-player collide detect, from player and from actors, 
   6.2+events map, collide events by types
   6.3+health, wounds, minimum needed stats and mechanic
      show msg who atk, with how attk, with amount of hp, show player hp, die
      end game, mon attaking
   6.4+direct to player
[ INWORK ]
** 7 items										   :inwork:
- +items on map
- +item list, test items in map, colors, draw items
- +interaction - find item on point
- mini inventory
*** inventory, view, take, drop
      - +inventory module
      - +inventory state
      - ~item types and description about item by type
      - ~inventory list draw
            - same items to stack with number
      - +action on item walk - msg - see $item
      - +take item
      - item actions - pass func
      - drop item
      - use item
      - activate
      - quaff - item effects: effect X itemType X action
      - read
      - actor slots
      - equiping wield and wear
      - eat

** 8 for minimum completed *DasHReaLM*
- char info mode, weared, stats
- stats str, dex, endurance and it's effect on actions and other
- doors, open, close, kick - commands, to direction mode
- weapon and armor effect on combat
- mobs types/race - load from file
- map save load with items, mobs, store player


- loot, paws, wool, skin, bone, meet, jelly
- map gen 
- mobs minds

* monsters data files, spawns
 other stats, and fun and story
 map, town, locations
 ...

** main target quest
** menu, start.

* future features
menu (not up down - use vi like.)
ascii art pic editor mode, terminal again vi keys... + animation.
Idea and world First! get old records and generate mechanic
First - fun therefore slash like dia
but not clone dia.
2. Magic and skill grows like morow
3. World height? it difficult for first try, lets it be simple dung with wild
4. Draw static map, weather zones, caves. Circle
5. fun events, fast grow, new challanges, FF, skills/items (keys, levitate, lava, swim) for access areas, bosses
6. end goal, meaning of all of this - survive and escape from planet. from black entitys.
day part status - sun/moon weather.
anim trees ...
* 1. World map, how store, view it with self position. map blocks. view frame.
1.1 Struct for wmap
1.2 Load wmap.
1.3 View wmap. (color regions) 
1.3.1 wmap mode.
1.4 show map region description.
1.5 gettext _
* 2.  local map, coords to wmap, load regions, moving, store, load
2.1 cursor move mode
2.2 how store/load local map? and view in edges. Viewport map. Load from pieces to global map array.
... local map files naming
2.3 load to global map
2.3.1 gmap mode
2.3.2 colors (without attributes)
2.4 global to viewport at point
2.5 moving and view map


* What I LEARNED
   make simple structures and basic methods in module
   then other module for more complex, linked to other modules functionality
   then most complex few modules than used by main module?

* log [ ] make wmap from locals
WRite and draw GP Mechanic, view, make questions and decisions, KNOW WHAT TO DO
 fun
 levels dungs town
 drop from actors
 wild simulations, population, born, old, learn, work, eat, sleep
	Display turns.
 UI progress bar with value
 unicode ncursesw
 save load
 data files for actors, items
 magic, skills, exp
http://www.roguebasin.com/index.php?title=Ncursesw
https://stackoverflow.com/questions/43834833/print-a-wide-unicode-character-with-ncurses
	lighting
 Check map folder exist
 TODO Fix global world map
 TODO fixing mem errors
 ATTENTION: Naming convention for func = <modulename>_<action>_<opt>
* Utils: map editor pipe, fix global map loading
 1. separate map loader using tile_map
 1.1+print loaded to stdout
 1.2 input map path-name to view
 2. make map converter from viewable format to string like in data
 2.1 load by lines from file and out to one line - script : tr -d \n 
 2.2 save converted to map file

* quests types
- reach location
- find(catch) N objects and bring it to npc/location
- escape from
- clear location from x
get quest from random encounter

- traps, and traps with reward

* plot
have a general goal, many rewards and many pitfalls.
Goal: find artifact. what? why? Ring of wisdome. World had stupid. You need cure it.
You hear that artifact deep in cave near forest. You go there and get lost.
... you find artifact and it traped in crystal, you need find magic wand of
freedome, lying in island in see over a desert.

* backlog
make dir for src
separate src .c for dirs/modules
